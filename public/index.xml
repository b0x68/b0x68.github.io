<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>b0x68</title>
    <link>http://b0x68.github.io/</link>
    <description>Recent content on b0x68</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 01 Feb 2024 18:09:39 -0500</lastBuildDate><atom:link href="http://b0x68.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Archiving Tools</title>
      <link>http://b0x68.github.io/techcontent/archiving-tools/</link>
      <pubDate>Thu, 01 Feb 2024 18:09:39 -0500</pubDate>
      
      <guid>http://b0x68.github.io/techcontent/archiving-tools/</guid>
      <description>Red Hat Certified Systems Administrator Exam 200 Objective: Archive, compress, unpack, and uncompress files In this tutorial, we will explore the essential skills required for the Red Hat Certified Systems Administrator (RHCSA) Exam 200 Objective related to archiving, compressing, unpacking, and uncompressing files using the versatile tools tar, gzip, and bzip2. These commands are fundamental for managing files efficiently in a Linux environment.
Table of Contents Introduction Using tar to Archive Files Compressing with gzip bzip2 for Compression Unpacking and Uncompressing Conclusion Introduction Managing files on a Linux system involves handling archives and compressed files efficiently.</description>
      <content>&lt;h1 id=&#34;red-hat-certified-systems-administrator-exam-200-objective-archive-compress-unpack-and-uncompress-files&#34;&gt;Red Hat Certified Systems Administrator Exam 200 Objective: Archive, compress, unpack, and uncompress files&lt;/h1&gt;
&lt;p&gt;In this tutorial, we will explore the essential skills required for the Red Hat Certified Systems Administrator (RHCSA) Exam 200 Objective related to archiving, compressing, unpacking, and uncompressing files using the versatile tools &lt;code&gt;tar&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, and &lt;code&gt;bzip2&lt;/code&gt;. These commands are fundamental for managing files efficiently in a Linux environment.&lt;/p&gt;
&lt;h2 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#using-tar-to-archive-files&#34;&gt;Using tar to Archive Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#compressing-with-gzip&#34;&gt;Compressing with gzip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#bzip2-for-compression&#34;&gt;bzip2 for Compression&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#unpacking-and-uncompressing&#34;&gt;Unpacking and Uncompressing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Managing files on a Linux system involves handling archives and compressed files efficiently. This RHCSA objective focuses on using &lt;code&gt;tar&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, and &lt;code&gt;bzip2&lt;/code&gt; to achieve this. Let&amp;rsquo;s dive into each command and understand how they can be employed effectively.&lt;/p&gt;
&lt;h2 id=&#34;using-tar-to-archive-files&#34;&gt;Using tar to Archive Files&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;tar&lt;/code&gt; command is a powerful tool for archiving files and directories. To create an archive, use the following syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -cvf archive_name.tar files_or_directories
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: Create a new archive.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: Verbose mode, show the progress.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: Specify the archive file name.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, to archive a directory named &lt;code&gt;my_folder&lt;/code&gt;, you would run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -cvf my_folder.tar my_folder
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;compressing-with-gzip&#34;&gt;Compressing with gzip&lt;/h2&gt;
&lt;p&gt;After creating an archive, you might want to compress it to save space. &lt;code&gt;gzip&lt;/code&gt; is a common compression tool. To compress a file using gzip, use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gzip file_name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command will create a compressed file with a &lt;code&gt;.gz&lt;/code&gt; extension. To compress our previously created tar archive:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gzip my_folder.tar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will result in a compressed file named &lt;code&gt;my_folder.tar.gz&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;bzip2-for-compression&#34;&gt;bzip2 for Compression&lt;/h2&gt;
&lt;p&gt;Another compression option is &lt;code&gt;bzip2&lt;/code&gt;. This tool provides higher compression ratios but might be slower. To compress a file using bzip2, use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bzip2 file_name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Similar to gzip, this will create a compressed file with a &lt;code&gt;.bz2&lt;/code&gt; extension. To compress our tar archive with bzip2:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bzip2 my_folder.tar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will generate a compressed file named &lt;code&gt;my_folder.tar.bz2&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;unpacking-and-uncompressing&#34;&gt;Unpacking and Uncompressing&lt;/h2&gt;
&lt;p&gt;To extract files from an archive created with &lt;code&gt;tar&lt;/code&gt;, use the following syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -xvf archive_name.tar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;: Extract files.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: Verbose mode, show the progress.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;: Specify the archive file name.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example, to extract the contents of our tar archive:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -xvf my_folder.tar
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To decompress files compressed with gzip or bzip2, use the respective commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gzip -d file_name.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bzip2 -d file_name.bz2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Mastering the &lt;code&gt;tar&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt;, and &lt;code&gt;bzip2&lt;/code&gt; commands is crucial for efficient file management on a Linux system. These skills are not only beneficial for the RHCSA Exam but also for day-to-day sysadmin tasks. Practice these commands in various scenarios to build confidence in using them effectively. Good luck with your exam preparation!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Switch Users in Multiuser Environnment</title>
      <link>http://b0x68.github.io/techcontent/switch-users-in-multiuser-environnment/</link>
      <pubDate>Thu, 01 Feb 2024 17:30:47 -0500</pubDate>
      
      <guid>http://b0x68.github.io/techcontent/switch-users-in-multiuser-environnment/</guid>
      <description>Red Hat Certified Systems Administrator Exam Objective: Log in and switch users in multiuser targets In this tutorial, we&amp;rsquo;ll explore the crucial skill of logging in and switching users within multiuser targets, a key objective of the Red Hat Certified Systems Administrator (RHCSA) Exam200. This skill is fundamental for efficiently managing a Red Hat Enterprise Linux system, especially in multiuser environments.
Prerequisites Before we dive into the tutorial, ensure that you have:</description>
      <content>&lt;h1 id=&#34;red-hat-certified-systems-administrator-exam-objective-log-in-and-switch-users-in-multiuser-targets&#34;&gt;Red Hat Certified Systems Administrator Exam Objective: Log in and switch users in multiuser targets&lt;/h1&gt;
&lt;p&gt;In this tutorial, we&amp;rsquo;ll explore the crucial skill of logging in and switching users within multiuser targets, a key objective of the Red Hat Certified Systems Administrator (RHCSA) Exam200. This skill is fundamental for efficiently managing a Red Hat Enterprise Linux system, especially in multiuser environments.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before we dive into the tutorial, ensure that you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A Red Hat Enterprise Linux system (either a physical machine or a virtual machine).&lt;/li&gt;
&lt;li&gt;Valid credentials to log in to the system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;logging-in&#34;&gt;Logging In&lt;/h2&gt;
&lt;h3 id=&#34;step-1-open-a-terminal&#34;&gt;Step 1: Open a Terminal&lt;/h3&gt;
&lt;p&gt;To begin, open a terminal on your Red Hat system. You can do this by using the terminal emulator or pressing &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;Alt&lt;/code&gt; + &lt;code&gt;T&lt;/code&gt; on the keyboard.&lt;/p&gt;
&lt;h3 id=&#34;step-2-enter-login-credentials&#34;&gt;Step 2: Enter Login Credentials&lt;/h3&gt;
&lt;p&gt;Once the terminal is open, you will be prompted to log in. Enter your username and password when prompted. Ensure that you are aware of the correct credentials to successfully log in.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ login: your_username
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ password: your_password
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After entering the correct credentials, press &lt;code&gt;Enter&lt;/code&gt; to log in.&lt;/p&gt;
&lt;h2 id=&#34;switching-users&#34;&gt;Switching Users&lt;/h2&gt;
&lt;h3 id=&#34;step-3-use-the-su-command&#34;&gt;Step 3: Use the &lt;code&gt;su&lt;/code&gt; Command&lt;/h3&gt;
&lt;p&gt;To switch users in a multiuser environment, the &lt;code&gt;su&lt;/code&gt; (switch user) command is your go-to tool. To switch to another user, type the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ su - username
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Replace &lt;code&gt;username&lt;/code&gt; with the name of the user to whom you want to switch. The &lt;code&gt;-&lt;/code&gt; option ensures that the environment variables are set to those of the specified user.&lt;/p&gt;
&lt;h3 id=&#34;step-4-enter-user-password&#34;&gt;Step 4: Enter User Password&lt;/h3&gt;
&lt;p&gt;After executing the &lt;code&gt;su&lt;/code&gt; command, you will be prompted to enter the password of the target user. Type the password and press &lt;code&gt;Enter&lt;/code&gt;. If the password is correct, you will be switched to the specified user.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Password: target_user_password
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;exiting-user-session&#34;&gt;Exiting User Session&lt;/h2&gt;
&lt;h3 id=&#34;step-5-return-to-the-original-user&#34;&gt;Step 5: Return to the Original User&lt;/h3&gt;
&lt;p&gt;To return to the original user, simply type the &lt;code&gt;exit&lt;/code&gt; command and press &lt;code&gt;Enter&lt;/code&gt;. This will close the current user&amp;rsquo;s session and take you back to the previous user.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ exit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Mastering the art of logging in and switching users in multiuser targets is essential for effective system administration on Red Hat Enterprise Linux. This skill will not only serve you well in the RHCSA Exam200 but also in real-world scenarios where efficient user management is critical.&lt;/p&gt;
&lt;p&gt;Now that you have successfully learned how to log in, switch users, and exit user sessions, you are one step closer to becoming a Red Hat Certified Systems Administrator. Practice these commands on your system to solidify your understanding and enhance your system administration skills. Good luck!&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Access Remote Systems Using SSH</title>
      <link>http://b0x68.github.io/techcontent/access-remote-systems-using-ssh/</link>
      <pubDate>Thu, 01 Feb 2024 09:31:19 -0500</pubDate>
      
      <guid>http://b0x68.github.io/techcontent/access-remote-systems-using-ssh/</guid>
      <description>Accessing Remote Systems Using SSH In this tutorial, we will explore how to access remote systems using SSH (Secure Shell), a powerful tool commonly used in system administration tasks. SSH allows you to securely connect to a remote system over an encrypted connection, providing a secure means of accessing and managing remote machines.
Prerequisites Before we begin, ensure that you have:
A basic understanding of the command line interface. SSH installed on your local system.</description>
      <content>&lt;h3 id=&#34;accessing-remote-systems-using-ssh&#34;&gt;Accessing Remote Systems Using SSH&lt;/h3&gt;
&lt;p&gt;In this tutorial, we will explore how to access remote systems using SSH (Secure Shell), a powerful tool commonly used in system administration tasks. SSH allows you to securely connect to a remote system over an encrypted connection, providing a secure means of accessing and managing remote machines.&lt;/p&gt;
&lt;h4 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h4&gt;
&lt;p&gt;Before we begin, ensure that you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A basic understanding of the command line interface.&lt;/li&gt;
&lt;li&gt;SSH installed on your local system. Most Linux distributions come with SSH pre-installed. If not, you can install it using your package manager.&lt;/li&gt;
&lt;li&gt;Access credentials (username and password or SSH key) for the remote system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;step-1-open-terminal&#34;&gt;Step 1: Open Terminal&lt;/h4&gt;
&lt;p&gt;First, open your terminal emulator. In Linux, you can typically find the terminal application in the Applications menu. On macOS, you can use the built-in Terminal application. If you&amp;rsquo;re using Windows, you can use software like PuTTY or the Windows Subsystem for Linux (WSL).&lt;/p&gt;
&lt;h4 id=&#34;step-2-initiate-ssh-connection&#34;&gt;Step 2: Initiate SSH Connection&lt;/h4&gt;
&lt;p&gt;To initiate an SSH connection, you&amp;rsquo;ll use the &lt;code&gt;ssh&lt;/code&gt; command followed by the username and hostname (or IP address) of the remote system. Here&amp;rsquo;s the basic syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh username@hostname_or_ip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Replace &lt;code&gt;username&lt;/code&gt; with your username on the remote system and &lt;code&gt;hostname_or_ip&lt;/code&gt; with the hostname or IP address of the remote system.&lt;/p&gt;
&lt;p&gt;For example, to connect to a remote system with the username &lt;code&gt;user1&lt;/code&gt; and the hostname &lt;code&gt;example.com&lt;/code&gt;, you would use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh user1@example.com
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If this is your first time connecting to the remote system, you may see a message asking you to confirm the authenticity of the host. Type &lt;code&gt;yes&lt;/code&gt; to continue.&lt;/p&gt;
&lt;h4 id=&#34;step-3-authentication&#34;&gt;Step 3: Authentication&lt;/h4&gt;
&lt;p&gt;Next, you&amp;rsquo;ll be prompted to enter your password or passphrase if you&amp;rsquo;re using SSH keys for authentication. Note that when typing your password, you won&amp;rsquo;t see any visual feedback (such as asterisks) for security reasons. Simply type your password and press Enter.&lt;/p&gt;
&lt;p&gt;If the authentication is successful, you&amp;rsquo;ll be logged into the remote system via SSH.&lt;/p&gt;
&lt;h4 id=&#34;step-4-exiting-the-ssh-session&#34;&gt;Step 4: Exiting the SSH Session&lt;/h4&gt;
&lt;p&gt;To exit the SSH session and return to your local system&amp;rsquo;s command line, simply type:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will terminate the SSH connection and return you to your local shell.&lt;/p&gt;
&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;In this tutorial, we&amp;rsquo;ve covered the basics of accessing remote systems using SSH. SSH is a powerful tool for securely managing remote machines and executing commands remotely. With practice, you&amp;rsquo;ll become comfortable using SSH for various system administration tasks.&lt;/p&gt;
&lt;p&gt;Happy remote system administration! 🚀&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Grep and Regex</title>
      <link>http://b0x68.github.io/techcontent/grep-and-regex/</link>
      <pubDate>Thu, 01 Feb 2024 08:12:53 -0500</pubDate>
      
      <guid>http://b0x68.github.io/techcontent/grep-and-regex/</guid>
      <description>How to Use grep and Regular Expressions to Analyze Text In this tutorial, we&amp;rsquo;ll explore how to use grep along with regular expressions to effectively analyze text. This skill is essential for the Red Hat Certified Systems Administrator Exam200.
Introduction grep is a powerful command-line utility used to search through text based on patterns. When combined with regular expressions (regex), it becomes even more versatile, allowing for complex pattern matching.</description>
      <content>&lt;h2 id=&#34;how-to-use-grep-and-regular-expressions-to-analyze-text&#34;&gt;How to Use &lt;code&gt;grep&lt;/code&gt; and Regular Expressions to Analyze Text&lt;/h2&gt;
&lt;p&gt;In this tutorial, we&amp;rsquo;ll explore how to use &lt;code&gt;grep&lt;/code&gt; along with regular expressions to effectively analyze text. This skill is essential for the Red Hat Certified Systems Administrator Exam200.&lt;/p&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; is a powerful command-line utility used to search through text based on patterns. When combined with regular expressions (regex), it becomes even more versatile, allowing for complex pattern matching.&lt;/p&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;Before we begin, ensure you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A basic understanding of the Linux command line.&lt;/li&gt;
&lt;li&gt;Access to a terminal on a Linux system.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h3&gt;
&lt;p&gt;To begin, open a terminal on your Linux system.&lt;/p&gt;
&lt;h3 id=&#34;using-grep&#34;&gt;Using &lt;code&gt;grep&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The basic syntax of &lt;code&gt;grep&lt;/code&gt; is:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;options&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; pattern &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;file...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[options]&lt;/code&gt;: Optional flags to modify &lt;code&gt;grep&lt;/code&gt;&amp;rsquo;s behavior.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pattern&lt;/code&gt;: The pattern you want to search for.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[file...]&lt;/code&gt;: Optional file(s) to search through. If not provided, &lt;code&gt;grep&lt;/code&gt; will read from standard input.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;h4 id=&#34;1-searching-for-a-word&#34;&gt;1. Searching for a Word&lt;/h4&gt;
&lt;p&gt;To search for occurrences of a specific word in a file, use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;word&amp;#34;&lt;/span&gt; filename
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Replace &lt;code&gt;&amp;quot;word&amp;quot;&lt;/code&gt; with the word you want to search for and &lt;code&gt;filename&lt;/code&gt; with the name of the file.&lt;/p&gt;
&lt;h4 id=&#34;2-case-insensitive-search&#34;&gt;2. Case Insensitive Search&lt;/h4&gt;
&lt;p&gt;To perform a case-insensitive search, use the &lt;code&gt;-i&lt;/code&gt; option:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pattern&amp;#34;&lt;/span&gt; filename
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;3-searching-in-multiple-files&#34;&gt;3. Searching in Multiple Files&lt;/h4&gt;
&lt;p&gt;To search for a pattern in multiple files, specify the filenames:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pattern&amp;#34;&lt;/span&gt; file1 file2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;4-using-regular-expressions&#34;&gt;4. Using Regular Expressions&lt;/h4&gt;
&lt;p&gt;Regular expressions allow for more complex pattern matching. For example, to search for lines starting with &amp;ldquo;abc&amp;rdquo;, use:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^abc&amp;#34;&lt;/span&gt; filename
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt; combined with regular expressions provides a powerful tool for text analysis on Linux systems. Practice using different patterns and options to become proficient in its usage.&lt;/p&gt;
&lt;p&gt;This tutorial covers the basics of using &lt;code&gt;grep&lt;/code&gt; and regular expressions. Experiment with different patterns and explore more advanced options to enhance your skills.&lt;/p&gt;
&lt;p&gt;Happy searching! 🚀&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Input Ouput Redirection</title>
      <link>http://b0x68.github.io/techcontent/input-ouput-redirection/</link>
      <pubDate>Wed, 31 Jan 2024 21:46:37 -0500</pubDate>
      
      <guid>http://b0x68.github.io/techcontent/input-ouput-redirection/</guid>
      <description>Red Hat Certified Systems Administrator Exam Objective: Use Input-Output Redirection In this tutorial, we&amp;rsquo;ll delve into the essential concept of input-output redirection, a fundamental skill for any Red Hat Certified Systems Administrator. Input-output redirection allows you to manipulate the flow of data between commands, files, and devices in the Linux shell. Understanding how to use redirection efficiently can greatly enhance your productivity and effectiveness in managing systems.
Prerequisites Before diving into input-output redirection, ensure you have a basic understanding of the Linux command line interface and familiarity with the Red Hat Linux environment.</description>
      <content>&lt;h1 id=&#34;red-hat-certified-systems-administrator-exam-objective-use-input-output-redirection&#34;&gt;Red Hat Certified Systems Administrator Exam Objective: Use Input-Output Redirection&lt;/h1&gt;
&lt;p&gt;In this tutorial, we&amp;rsquo;ll delve into the essential concept of input-output redirection, a fundamental skill for any Red Hat Certified Systems Administrator. Input-output redirection allows you to manipulate the flow of data between commands, files, and devices in the Linux shell. Understanding how to use redirection efficiently can greatly enhance your productivity and effectiveness in managing systems.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before diving into input-output redirection, ensure you have a basic understanding of the Linux command line interface and familiarity with the Red Hat Linux environment.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s start by exploring the different symbols and operators used for input-output redirection:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;: Redirects standard output to a file, creating the file if it does not exist or overwriting its contents if it does.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;: Appends standard output to a file, creating the file if it does not exist.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|&lt;/code&gt;: Redirects standard output of one command to the standard input of another command, allowing for command chaining or piping.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&amp;gt;&lt;/code&gt;: Redirects standard error to a file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, let&amp;rsquo;s see how we can use these redirection operators in various scenarios.&lt;/p&gt;
&lt;h2 id=&#34;redirecting-standard-output&#34;&gt;Redirecting Standard Output&lt;/h2&gt;
&lt;p&gt;To redirect the output of a command to a file, use the &lt;code&gt;&amp;gt;&lt;/code&gt; operator. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls &amp;gt; directory_contents.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command lists the contents of the current directory and redirects the output to a file named &lt;code&gt;directory_contents.txt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To append output to an existing file, use the &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; operator:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Additional content&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; directory_contents.txt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command appends the text &amp;ldquo;Additional content&amp;rdquo; to the file &lt;code&gt;directory_contents.txt&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;piping-commands&#34;&gt;Piping Commands&lt;/h2&gt;
&lt;p&gt;Piping commands allow you to send the output of one command as input to another command. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pattern&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command lists the contents of the current directory and uses &lt;code&gt;grep&lt;/code&gt; to filter the output based on the specified pattern.&lt;/p&gt;
&lt;h2 id=&#34;redirecting-standard-error&#34;&gt;Redirecting Standard Error&lt;/h2&gt;
&lt;p&gt;To redirect standard error to a file, use the &lt;code&gt;2&amp;gt;&lt;/code&gt; operator. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ command_not_found 2&amp;gt; error.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command redirects any error messages generated by the command &lt;code&gt;command_not_found&lt;/code&gt; to a file named &lt;code&gt;error.log&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this tutorial, we&amp;rsquo;ve covered the basics of input-output redirection in Linux, an essential skill for system administrators. By mastering these concepts and operators, you&amp;rsquo;ll be better equipped to manage and manipulate data flow within the Linux shell, contributing to improved efficiency and productivity in your system administration tasks. Practice using these redirection techniques in various scenarios to solidify your understanding and expertise.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>How to Access Shell Prompt</title>
      <link>http://b0x68.github.io/techcontent/how-to-access-shell-prompt/</link>
      <pubDate>Wed, 31 Jan 2024 13:18:25 -0500</pubDate>
      
      <guid>http://b0x68.github.io/techcontent/how-to-access-shell-prompt/</guid>
      <description>Red Hat Certified Systems Administrator (RHCSA) Exam Objectives Tutorial
Access the Command Line Objective 1: Log in to a Linux system and run simple commands using the shell
In this tutorial, we will learn how to log in to a Linux system and execute simple commands using the shell.
Logging in to a Linux system:
Open a terminal window. Use the ssh command to connect to the desired Linux system: ssh username@hostname Enter the password when prompted.</description>
      <content>&lt;p&gt;&lt;strong&gt;Red Hat Certified Systems Administrator (RHCSA) Exam Objectives Tutorial&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;access-the-command-line&#34;&gt;&lt;strong&gt;Access the Command Line&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Objective 1: Log in to a Linux system and run simple commands using the shell&lt;/p&gt;
&lt;p&gt;In this tutorial, we will learn how to log in to a Linux system and execute simple commands using the shell.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Logging in to a Linux system&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open a terminal window.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;ssh&lt;/code&gt; command to connect to the desired Linux system:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh username@hostname
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Enter the password when prompted.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Executing Simple Commands&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Once logged in, you can run various commands. Here are a few examples:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ls&lt;/code&gt;: List files and directories in the current location.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwd&lt;/code&gt;: Print the current working directory.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;whoami&lt;/code&gt;: Display the username of the current user.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;date&lt;/code&gt;: Show the current date and time.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Desktop  Documents  Downloads  Music  Pictures  Videos
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    </item>
    
    <item>
      <title>Accessing an Enterprise Linux Shell Prompt and Using the `ps` Command</title>
      <link>http://b0x68.github.io/templates/template-post/</link>
      <pubDate>Sun, 03 Dec 2023 09:51:07 -0500</pubDate>
      
      <guid>http://b0x68.github.io/templates/template-post/</guid>
      <description></description>
      <content></content>
    </item>
    
    <item>
      <title>Video: Drain -- Live on Audiotree</title>
      <link>http://b0x68.github.io/archive/drain-the-band/</link>
      <pubDate>Sat, 17 Dec 2022 17:02:38 -0500</pubDate>
      
      <guid>http://b0x68.github.io/archive/drain-the-band/</guid>
      <description>Go check out DRAIN</description>
      <content>&lt;iframe 
    width=&#34;560&#34;
    height=&#34;315&#34;
    src=&#34;https://www.youtube.com/embed/azWFcn6DvRk&#34;
    title=&#34;YouTube video player&#34;
    frameborder=&#34;0&#34;
    allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34;
    allowfullscreen&gt;
&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&#34;https://www.epitaph.com/artists/drain&#34;&gt;Go check out DRAIN&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>About This Website</title>
      <link>http://b0x68.github.io/about/about/</link>
      <pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>http://b0x68.github.io/about/about/</guid>
      <description>My name is Brian and this is my personal website. The content will mostly be tech related &amp;ndash; Linux, web development, how-to articles like in Technical Content, etc. I can also guarantee there will be completely random and unrelated content. By day I am a linux infrastructure administrator; by night, I&amp;rsquo;m a serial hobbyist.
I don&amp;rsquo;t claim to be an expert on anything, but I&amp;rsquo;ll share my experiences in hope they help others.</description>
      <content>&lt;p&gt;My name is Brian and this is my personal website. The content will mostly be tech related &amp;ndash; Linux, web development, how-to articles like in &lt;a href=&#34;https://b0x68.github.io/techcontent&#34;&gt;Technical Content&lt;/a&gt;, etc. I can also guarantee there will be completely random and unrelated content. By day I am a linux infrastructure administrator; by night, I&amp;rsquo;m a serial hobbyist.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t claim to be an expert on anything, but I&amp;rsquo;ll share my experiences in hope they help others.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some notable strengths:
&lt;ul&gt;
&lt;li&gt;Enterprise/RPM based Linux &amp;ndash; RHEL, Springdale, CentOS, Rocky&lt;/li&gt;
&lt;li&gt;Software:
&lt;ul&gt;
&lt;li&gt;Languages: bash, Python, Go(lang), Puppet&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;CAS&lt;/li&gt;
&lt;li&gt;OpenDJ, LDAP, Duo&lt;/li&gt;
&lt;li&gt;Apache, Passenger, Web frameworks&lt;/li&gt;
&lt;li&gt;HPC cluster administration &amp;ndash; SLURM, NVidia, Jobstats&lt;/li&gt;
&lt;li&gt;NFS, CIFS&lt;/li&gt;
&lt;li&gt;Docker, Apptainer(Singularity)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interests
&lt;ul&gt;
&lt;li&gt;Wood working, wood turning&lt;/li&gt;
&lt;li&gt;Motorsports &amp;ndash; Sprint Cars, NASCAR, F1, Indy, Rally&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;code&gt;programming&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Beginner: Start a Blog with HUGO</title>
      <link>http://b0x68.github.io/techcontent/how-to-hugo-blog/</link>
      <pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>http://b0x68.github.io/techcontent/how-to-hugo-blog/</guid>
      <description>I&amp;rsquo;m brand new to HUGO and this is my version of &amp;lsquo;how to with HUGO as a beginner&amp;rsquo;. My first post will be a walk through of how I went about spinning up this site.
What is HUGO? TLDR: Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again.
If you really want to learn about HUGO, you should head on over to their official site.</description>
      <content>&lt;p&gt;I&amp;rsquo;m brand new to HUGO and this is my version of &amp;lsquo;how to with HUGO as a beginner&amp;rsquo;. My first post will be a walk through of how I went about spinning up this site.&lt;/p&gt;
&lt;h1 id=&#34;_what_-is-hugo&#34;&gt;&lt;em&gt;What&lt;/em&gt; is HUGO?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;TLDR: &lt;em&gt;Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you really want to learn about HUGO, you should &lt;a href=&#34;https://gohugo.io/about/what-is-hugo/&#34;&gt;head on over to their official site.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I can confirm; HUGO makes &lt;em&gt;learning&lt;/em&gt; website creation bearable. Admittedly, I&amp;rsquo;m not very interested in the low-level intricacies of front end languages, so using HUGO, where there are many fully-fledged themes freely available and the integration of &lt;a href=&#34;https://www.markdownguide.org/getting-started/&#34;&gt;markdown&lt;/a&gt;, makes this type of project &lt;em&gt;fun&lt;/em&gt; and easy :) Understandably, your definition of fun may vary!&lt;/p&gt;
&lt;p&gt;I acknowledge some custom HTML, CSS, and/or Javascript work will need to be done if you&amp;rsquo;re not completely satisfied with your theme&amp;rsquo;s look and feel. A future post, perhaps.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;my-environment&#34;&gt;My Environment&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;MacOS Ventura 13.0&lt;/li&gt;
&lt;li&gt;Go(lang) version go1.19.4 darwin/amd64&lt;/li&gt;
&lt;li&gt;Hugo v0.108.0+extended darwin/amd64&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Keep in mind, there are many options for what your environment can be, e.g., Docker, Vagrant, a VM, Cloud based, etc. These are outside the scope of this article, but you can easily web search this information and choose your desired setup.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Software
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/installation/&#34;&gt;Hugo&lt;/a&gt; - &lt;strong&gt;&lt;code&gt;required&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/git-guides/install-git&#34;&gt;Git&lt;/a&gt; - &lt;strong&gt;&lt;code&gt;required&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Text Editor (&lt;a href=&#34;https://www.vim.org/download.php&#34;&gt;vim&lt;/a&gt;, &lt;a href=&#34;https://code.visualstudio.com/download&#34;&gt;VSCode&lt;/a&gt;, etc.) - &lt;strong&gt;&lt;code&gt;required&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://go.dev/doc/install&#34;&gt;Go&lt;/a&gt; - &lt;em&gt;&lt;code&gt;recommended&lt;/code&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;lets-begin&#34;&gt;Let&amp;rsquo;s Begin&lt;/h1&gt;
&lt;p&gt;Okay, so first, I make a dev environment in my &lt;code&gt;~/projects/&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir ~/projects/hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site blog-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd blog-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# git init for later when we push to github&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/panr/hugo-theme-terminal themes/terminal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# edit line &amp;#34;theme = &amp;#39;terminal&amp;#39;&amp;#34; in editor \&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# of your choice. Mine is vim&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim config.toml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# now let&amp;#39;s test to make sure it&amp;#39;s working&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo server --port &lt;span style=&#34;color:#ae81ff&#34;&gt;1313&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-terminal&#34; data-lang=&#34;terminal&#34;&gt;# sample output of local webserver on successful startup

Start building sites …
hugo v0.108.0+extended darwin/amd64 BuildDate=unknown

                   | EN
-------------------+-----
  Pages            | 38
  Paginator pages  |  0
  Non-page files   |  0
  Static files     | 11
  Processed images |  0
  Aliases          | 15
  Sitemaps         |  1
  Cleaned          |  0

Built in 58 ms
Watching for changes in ~/projects/hugo/hrklib/{archetypes,assets,content,data,layouts,static,themes}
Watching for config changes in ~/projects/hugo/hrklib/config.toml, ~/projects/hugo/hrklib/themes/terminal/config.toml
Environment: &amp;#34;development&amp;#34;
Serving pages from memory
Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
Web Server is available at http://localhost:1313/ (bind address 127.0.0.1)
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, open an incognito web browser window and navigate the &lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You should see bare bones Terminal themed website. Like below&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pic.png&#34; alt=&#34;screenshot&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
